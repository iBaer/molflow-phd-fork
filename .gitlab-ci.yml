variables:
  APP_NAME: "molflow"
  APP_NAME_CAPS: "MOLFLOW"

stages:
  - build
  - build-artifact
  - optional-artifact

build-windows-master:
  stage: build
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - echo "Building Windows Master"
    - Set-Variable -Name "buildpath" -Value (($pwd).path + "\build")
    - mkdir -P $buildpath
    - cd $buildpath
    - echo "Init project in:"+($pwd).path
    - C:\BuildTools\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe -DCMAKE_BUILD_TYPE=RELEASE -G Ninja $buildpath\..
    - echo "Starting build in:" + ($buildpath).path
    - C:\BuildTools\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe --build $buildpath --config Release -- -j 4
    - Set-Variable -Name "DATE" -Value (Get-Date -Format "yyyy_MM_dd")
    - Set-Variable -Name "FNAME" -Value ("\master\" + $DATE + "_" + $env:CI_COMMIT_REF_NAME + "_" + $env:CI_PIPELINE_ID)
    - Set-Variable -Name "outputpath" -Value ($buildpath + "\bin\win\release")
    - echo $FNAME
    - New-Item -Path ("C:\" + ($APP_NAME_CAPS) + "_CI") -Name $FNAME -ItemType "directory" -Force
    - Copy-Item $outputpath -Destination ("C:\" + ($APP_NAME_CAPS) + "_CI\" + ($FNAME) + "\") -Recurse -Force
  after_script:
    - echo "Finished"
  tags:
    - windows

.build-unix:
  stage: build
  before_script:
    - whoami
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - echo "Building $OS_NAME Master"
    - buildpath=$(pwd)"/build"
    - mkdir -p $buildpath
    - cd $buildpath
    - echo "Init project in:" $(pwd)
    - cmake -DCMAKE_BUILD_TYPE=RELEASE $buildpath/..
    - echo "Starting build in:" $buildpath
    - cmake --build $buildpath --config Release -- -j 4
    - export DATE=`date +%Y_%m_%d`
    - export FNAME=master'/'$DATE'_'$CI_COMMIT_REF_NAME'_'$CI_PIPELINE_ID
    - export outputpath=$buildpath'/bin/'$OS_FULL_NAME'/release'
    - echo $FNAME
    - mkdir -p ~/$APP_NAME_CAPS'_CI/'$FNAME
    - cp -r $outputpath/* ~/$APP_NAME_CAPS'_CI/'$FNAME'/'
    - ls ~/
    - ls ~/$APP_NAME_CAPS'_CI/'
    - ls ~/$APP_NAME_CAPS'_CI/'$FNAME'/'
  after_script:
    - echo "Finished"

build-debian-master:
  extends: .build-unix
  variables:
    OS_NAME: "debian"
    OS_FULL_NAME: "linux_debian"
  tags:
    - debian

build-fedora-master:
  extends: .build-unix
  variables:
    OS_NAME: "fedora"
    OS_FULL_NAME: "linux_debian"
  tags:
    - fedora

build-macos-master:
  extends: .build-unix
  variables:
    OS_NAME: "mac"
    OS_FULL_NAME: "mac"
  needs: []
  tags:
    - macos
  when: manual
  allow_failure: true

build-artifact-windows-master:
  stage: build-artifact
  script:
    - Set-Variable -Name "DATE" -Value (Get-Date -Format "yyyy_MM_dd")
    - Set-Variable -Name "FNAME" -Value ("\master\" + $DATE + "_" + $env:CI_COMMIT_REF_NAME + "_" + $env:CI_PIPELINE_ID)
    - echo $FNAME
    - Compress-Archive -Path ("C:\" + ($APP_NAME_CAPS) + "_CI\" + ($FNAME) + "\*") -DestinationPath (".\" + ($APP_NAME) + "_windows.zip")
  artifacts:
    paths:
      - .\$(APP_NAME)_windows.zip
    expire_in: 54 weeks
  needs:
    - job: build-windows-master
  tags:
    - windows
  only:
    - master

.artifact-unix:
  stage: build-artifact
  script:
    - export DATE=`date +%Y_%m_%d`
    - export FNAME=master'/'$DATE'_'$CI_COMMIT_REF_NAME'_'$CI_PIPELINE_ID
    - echo $FNAME
    - echo ~/$APP_NAME_CAPS'_CI/'$FNAME'/'
    - ls ~/
    - ls ~/$APP_NAME_CAPS'_CI/'
    - ls ~/$APP_NAME_CAPS'_CI/'$FNAME'/'
    - 7za a ./$APP_NAME'_'$OS_NAME'.zip' '~/'$APP_NAME_CAPS'_CI/'$FNAME'/*'
  artifacts:
    paths:
      - ./$(APP_NAME)_$OS_NAME.zip
    expire_in: 4 weeks

build-artifact-debian-master:
  extends: .artifact-unix
  variables:
    OS_NAME: "debian"
  needs:
    - job: build-debian-master
  tags:
    - debian
  only:
    - master

build-artifact-fedora-master:
  extends: .artifact-unix
  variables:
    OS_NAME: "fedora"
  needs:
    - job: build-fedora-master
  tags:
    - fedora
  only:
    - master

build-artifact-macos-master:
  extends: .artifact-unix
  stage: optional-artifact
  variables:
    OS_NAME: "mac"
  needs:
    - job: build-macos-master
  tags:
    - macos
  only:
    - master
  when: manual
  allow_failure: true

build-artifact-windows-branch:
  stage: build-artifact
  script:
    - Set-Variable -Name "DATE" -Value (Get-Date -Format "yyyy_MM_dd")
    - Set-Variable -Name "FNAME" -Value ("\master\" + $DATE + "_" + $env:CI_COMMIT_REF_NAME + "_" + $env:CI_PIPELINE_ID)
    - echo $FNAME
    - Compress-Archive -Path ("C:\" + ($APP_NAME_CAPS) + "_CI\" + ($FNAME) + "\*") -DestinationPath (".\" + ($APP_NAME) + "_windows.zip")
  artifacts:
    paths:
      - .\($APP_NAME)_windows.zip
    expire_in: 4 weeks
  needs:
    - job: build-windows-master
  tags:
    - windows
  only:
    - branches
  except:
    - master
    - tags

build-artifact-debian-branch:
  extends: .artifact-unix
  variables:
    OS_NAME: "debian"
  needs:
    - job: build-debian-master
  tags:
    - debian
  only:
    - branches
  except:
    - master
    - tags
  artifacts:
    expire_in: 4 weeks

build-artifact-fedora-branch:
  extends: .artifact-unix
  variables:
    OS_NAME: "fedora"
  needs:
    - job: build-fedora-master
  tags:
    - fedora
  only:
    - branches
  except:
    - master
    - tags
  artifacts:
    expire_in: 4 weeks

build-artifact-macos-branch:
  extends: .artifact-unix
  stage: optional-artifact
  variables:
    OS_NAME: "mac"
  tags:
    - macos
  only:
    - branches
  except:
    - master
    - tags
  artifacts:
    expire_in: 4 weeks
  when: manual
  allow_failure: true